	server {
    listen 443 ssl;
    server_name _;
        
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    set_real_ip_from 127.0.0.1;
    real_ip_header X-Forwarded-For;

    proxy_headers_hash_max_size     512;
    proxy_headers_hash_bucket_size  128;
    proxy_connect_timeout           300;
    client_header_timeout           300;
    client_body_timeout             300;

    # Buffer
    proxy_buffer_size               512k;
    proxy_buffers               128 512k;
    client_body_buffer_size        2048k;
    client_header_buffer_size      2048k;
    large_client_header_buffers 128 2048k;

    # security headers
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN";

    ssl_buffer_size 65k;
    ssl_certificate /etc/letsencrypt/live/_/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/_/privkey.pem;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_ciphers TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384:TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256:TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384:TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256:HIGH:!SHA256:!SHA384:!DSS:!aNULL:!aNULL:!CAMELLIA:!SHA:!RSA;
    proxy_ssl_ciphers TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384:TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256:TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384:TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256:HIGH:!SHA256:!SHA384:!DSS:!aNULL:!CAMELLIA:!SHA:!RSA;
    include /etc/nginx/conf.d/hardening.conf;

    location / {
        proxy_pass http://app;
        include /etc/nginx/conf.d/timeout.conf;
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto 'https';
        proxy_set_header X-Forwarded-Port '443';
        proxy_set_header X-Node $hostname;
        proxy_ignore_client_abort on;

        add_header 'X-Forwarded-For' $proxy_add_x_forwarded_for;
        add_header 'X-Forwarded-Proto' 'https';
        add_header 'X-Node' $hostname;

        # OPTION Method handler
        if ($request_method ~ ^(OPTIONS)$ ){
            add_header 'Access-Control-Allow-Methods' 'POST, GET, OPTIONS, HEAD' always;
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Access-Control-Allow-Headers' 'Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Accept,Authorization,X-Requested-With,store,x-recaptcha,X-CSRF-Token';
            add_header 'Access-Control-Expose-Headers' 'Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Accept,Authorization,X-Requested-With,store,x-recaptcha,X-CSRF-Token';
            return 200;
            break;
        }

        # Get Handler
        if ($request_method ~ ^(GET)$ ){
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            add_header X-Frame-Options "SAMEORIGIN";
            include /etc/nginx/conf.d/CORS.rule;
        }

        # Post Handler
        if ($request_method ~ ^(POST)$ ){
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            add_header X-Frame-Options "SAMEORIGIN";
            include /etc/nginx/conf.d/CORS.rule;
        }

        include conf.d/blockbot.conf;

    }

    access_log /var/log/nginx/__SERVER_NAME__.access.log main;
    error_log /var/log/nginx/__SERVER_NAME__.error.log error;
}